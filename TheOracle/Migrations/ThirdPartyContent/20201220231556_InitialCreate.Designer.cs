// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace TheOracle.Migrations.ThirdPartyContent
{
    [DbContext(typeof(ThirdPartyContentContext))]
    [Migration("20201220231556_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("TheOracle.GameCore.Assets.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CountingAssetTrackId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Game")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IconUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MultiFieldAssetTrackId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumericAssetTrackId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserSubscriptionsUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CountingAssetTrackId");

                    b.HasIndex("MultiFieldAssetTrackId");

                    b.HasIndex("NumericAssetTrackId");

                    b.HasIndex("UserSubscriptionsUserId");

                    b.ToTable("UserAssets");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.AssetEmbedField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveText")
                        .HasColumnType("TEXT");

                    b.Property<string>("InactiveText")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MultiFieldAssetTrackId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MultiFieldAssetTrackId");

                    b.ToTable("AssetEmbedField");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.AssetField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("AssetField");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.CountingAssetTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartingValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CountingAssetTrack");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.InputField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetFieldId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetFieldId");

                    b.HasIndex("AssetId");

                    b.ToTable("InputField");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.MultiFieldAssetTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MultiFieldAssetTrack");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.NumericAssetTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Min")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NumericAssetTrack");
                });

            modelBuilder.Entity("TheOracle.GameCore.Oracle.StandardOracle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Chance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prompt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StandardOracleId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("UserSubscriptionsUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StandardOracleId");

                    b.HasIndex("UserSubscriptionsUserId");

                    b.ToTable("UserOracles");
                });

            modelBuilder.Entity("TheOracle.GameCore.UserContent.UserSubscriptions", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserSubscriptions");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.Asset", b =>
                {
                    b.HasOne("TheOracle.GameCore.Assets.CountingAssetTrack", "CountingAssetTrack")
                        .WithMany()
                        .HasForeignKey("CountingAssetTrackId");

                    b.HasOne("TheOracle.GameCore.Assets.MultiFieldAssetTrack", "MultiFieldAssetTrack")
                        .WithMany()
                        .HasForeignKey("MultiFieldAssetTrackId");

                    b.HasOne("TheOracle.GameCore.Assets.NumericAssetTrack", "NumericAssetTrack")
                        .WithMany()
                        .HasForeignKey("NumericAssetTrackId");

                    b.HasOne("TheOracle.GameCore.UserContent.UserSubscriptions", null)
                        .WithMany("Assets")
                        .HasForeignKey("UserSubscriptionsUserId");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.AssetEmbedField", b =>
                {
                    b.HasOne("TheOracle.GameCore.Assets.MultiFieldAssetTrack", null)
                        .WithMany("Fields")
                        .HasForeignKey("MultiFieldAssetTrackId");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.AssetField", b =>
                {
                    b.HasOne("TheOracle.GameCore.Assets.Asset", null)
                        .WithMany("AssetFields")
                        .HasForeignKey("AssetId");
                });

            modelBuilder.Entity("TheOracle.GameCore.Assets.InputField", b =>
                {
                    b.HasOne("TheOracle.GameCore.Assets.AssetField", null)
                        .WithMany("InputFields")
                        .HasForeignKey("AssetFieldId");

                    b.HasOne("TheOracle.GameCore.Assets.Asset", null)
                        .WithMany("InputFields")
                        .HasForeignKey("AssetId");
                });

            modelBuilder.Entity("TheOracle.GameCore.Oracle.StandardOracle", b =>
                {
                    b.HasOne("TheOracle.GameCore.Oracle.StandardOracle", null)
                        .WithMany("Oracles")
                        .HasForeignKey("StandardOracleId");

                    b.HasOne("TheOracle.GameCore.UserContent.UserSubscriptions", null)
                        .WithMany("Oracles")
                        .HasForeignKey("UserSubscriptionsUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
